//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioMatcher.ServiceAdapter.FingerPrintServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FingerPrintServiceReference.FingerPrintSoap")]
    public interface FingerPrintSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertResponse Insert(BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertResponse> InsertAsync(BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        bool Update(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateAsync(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Deactivate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        bool Deactivate(long memberFingerPrintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Deactivate", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeactivateAsync(long memberFingerPrintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        bool UpdateStatus(long memberFingerPrintID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateStatusAsync(long memberFingerPrintID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        bool Delete(long memberFingerPrintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteAsync(long memberFingerPrintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] Get(long memberFingerPrintID, long memberID, int localeID, int fingerType, int templateType, int status, System.DateTime lastDateUpdated, bool includeRaw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get", ReplyAction="*")]
        System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetAsync(long memberFingerPrintID, long memberID, int localeID, int fingerType, int templateType, int status, System.DateTime lastDateUpdated, bool includeRaw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetByLocale", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] GetByLocale(int localeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetByLocale", ReplyAction="*")]
        System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetByLocaleAsync(int localeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetByMember", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CreationDate))]
        BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] GetByMember(long memberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetByMember", ReplyAction="*")]
        System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetByMemberAsync(long memberID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MemberFingerPrint : CreationDate {
        
        private long memberFingerPrintIDField;
        
        private long memberIDField;
        
        private byte[] rawFingerPrintField;
        
        private byte[] fingerPrintField;
        
        private int fingerPrintSizeField;
        
        private int fingerTypeField;
        
        private int templateTypeField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long MemberFingerPrintID {
            get {
                return this.memberFingerPrintIDField;
            }
            set {
                this.memberFingerPrintIDField = value;
                this.RaisePropertyChanged("MemberFingerPrintID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long MemberID {
            get {
                return this.memberIDField;
            }
            set {
                this.memberIDField = value;
                this.RaisePropertyChanged("MemberID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] RawFingerPrint {
            get {
                return this.rawFingerPrintField;
            }
            set {
                this.rawFingerPrintField = value;
                this.RaisePropertyChanged("RawFingerPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=3)]
        public byte[] FingerPrint {
            get {
                return this.fingerPrintField;
            }
            set {
                this.fingerPrintField = value;
                this.RaisePropertyChanged("FingerPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int FingerPrintSize {
            get {
                return this.fingerPrintSizeField;
            }
            set {
                this.fingerPrintSizeField = value;
                this.RaisePropertyChanged("FingerPrintSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int FingerType {
            get {
                return this.fingerTypeField;
            }
            set {
                this.fingerTypeField = value;
                this.RaisePropertyChanged("FingerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int TemplateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
                this.RaisePropertyChanged("TemplateType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemberFingerPrintRow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemberFingerPrint))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CreationDate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime dateCreatedField;
        
        private int createdByField;
        
        private System.DateTime dateUpdatedField;
        
        private int updatedByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("DateCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
                this.RaisePropertyChanged("DateUpdated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
                this.RaisePropertyChanged("UpdatedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MemberFingerPrintRow : CreationDate {
        
        private long memberFingerPrintIDField;
        
        private long memberIDField;
        
        private int localeIDField;
        
        private byte[] rawFingerPrintField;
        
        private byte[] fingerPrintField;
        
        private int fingerPrintSizeField;
        
        private int fingerTypeField;
        
        private int templateTypeField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long MemberFingerPrintID {
            get {
                return this.memberFingerPrintIDField;
            }
            set {
                this.memberFingerPrintIDField = value;
                this.RaisePropertyChanged("MemberFingerPrintID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long MemberID {
            get {
                return this.memberIDField;
            }
            set {
                this.memberIDField = value;
                this.RaisePropertyChanged("MemberID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int LocaleID {
            get {
                return this.localeIDField;
            }
            set {
                this.localeIDField = value;
                this.RaisePropertyChanged("LocaleID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=3)]
        public byte[] RawFingerPrint {
            get {
                return this.rawFingerPrintField;
            }
            set {
                this.rawFingerPrintField = value;
                this.RaisePropertyChanged("RawFingerPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=4)]
        public byte[] FingerPrint {
            get {
                return this.fingerPrintField;
            }
            set {
                this.fingerPrintField = value;
                this.RaisePropertyChanged("FingerPrint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int FingerPrintSize {
            get {
                return this.fingerPrintSizeField;
            }
            set {
                this.fingerPrintSizeField = value;
                this.RaisePropertyChanged("FingerPrintSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int FingerType {
            get {
                return this.fingerTypeField;
            }
            set {
                this.fingerTypeField = value;
                this.RaisePropertyChanged("FingerType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TemplateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
                this.RaisePropertyChanged("TemplateType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint;
        
        public InsertRequest() {
        }
        
        public InsertRequest(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint) {
            this.memberFingerPrint = memberFingerPrint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool InsertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long memberFingerPrintID;
        
        public InsertResponse() {
        }
        
        public InsertResponse(bool InsertResult, long memberFingerPrintID) {
            this.InsertResult = InsertResult;
            this.memberFingerPrintID = memberFingerPrintID;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FingerPrintSoapChannel : BioMatcher.ServiceAdapter.FingerPrintServiceReference.FingerPrintSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FingerPrintSoapClient : System.ServiceModel.ClientBase<BioMatcher.ServiceAdapter.FingerPrintServiceReference.FingerPrintSoap>, BioMatcher.ServiceAdapter.FingerPrintServiceReference.FingerPrintSoap {
        
        public FingerPrintSoapClient() {
        }
        
        public FingerPrintSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FingerPrintSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerPrintSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FingerPrintSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertResponse BioMatcher.ServiceAdapter.FingerPrintServiceReference.FingerPrintSoap.Insert(BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest request) {
            return base.Channel.Insert(request);
        }
        
        public bool Insert(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint, out long memberFingerPrintID) {
            BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest inValue = new BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest();
            inValue.memberFingerPrint = memberFingerPrint;
            BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertResponse retVal = ((BioMatcher.ServiceAdapter.FingerPrintServiceReference.FingerPrintSoap)(this)).Insert(inValue);
            memberFingerPrintID = retVal.memberFingerPrintID;
            return retVal.InsertResult;
        }
        
        public System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertResponse> InsertAsync(BioMatcher.ServiceAdapter.FingerPrintServiceReference.InsertRequest request) {
            return base.Channel.InsertAsync(request);
        }
        
        public bool Update(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint) {
            return base.Channel.Update(memberFingerPrint);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrint memberFingerPrint) {
            return base.Channel.UpdateAsync(memberFingerPrint);
        }
        
        public bool Deactivate(long memberFingerPrintID) {
            return base.Channel.Deactivate(memberFingerPrintID);
        }
        
        public System.Threading.Tasks.Task<bool> DeactivateAsync(long memberFingerPrintID) {
            return base.Channel.DeactivateAsync(memberFingerPrintID);
        }
        
        public bool UpdateStatus(long memberFingerPrintID, int status) {
            return base.Channel.UpdateStatus(memberFingerPrintID, status);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStatusAsync(long memberFingerPrintID, int status) {
            return base.Channel.UpdateStatusAsync(memberFingerPrintID, status);
        }
        
        public bool Delete(long memberFingerPrintID) {
            return base.Channel.Delete(memberFingerPrintID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(long memberFingerPrintID) {
            return base.Channel.DeleteAsync(memberFingerPrintID);
        }
        
        public BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] Get(long memberFingerPrintID, long memberID, int localeID, int fingerType, int templateType, int status, System.DateTime lastDateUpdated, bool includeRaw) {
            return base.Channel.Get(memberFingerPrintID, memberID, localeID, fingerType, templateType, status, lastDateUpdated, includeRaw);
        }
        
        public System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetAsync(long memberFingerPrintID, long memberID, int localeID, int fingerType, int templateType, int status, System.DateTime lastDateUpdated, bool includeRaw) {
            return base.Channel.GetAsync(memberFingerPrintID, memberID, localeID, fingerType, templateType, status, lastDateUpdated, includeRaw);
        }
        
        public BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] GetByLocale(int localeID) {
            return base.Channel.GetByLocale(localeID);
        }
        
        public System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetByLocaleAsync(int localeID) {
            return base.Channel.GetByLocaleAsync(localeID);
        }
        
        public BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[] GetByMember(long memberID) {
            return base.Channel.GetByMember(memberID);
        }
        
        public System.Threading.Tasks.Task<BioMatcher.ServiceAdapter.FingerPrintServiceReference.MemberFingerPrintRow[]> GetByMemberAsync(long memberID) {
            return base.Channel.GetByMemberAsync(memberID);
        }
    }
}
