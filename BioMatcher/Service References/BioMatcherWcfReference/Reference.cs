//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioMatcher.BioMatcherWcfReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchRequest", Namespace="http://schemas.datacontract.org/2004/07/BioMatcher")]
    [System.SerializableAttribute()]
    public partial class MatchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtraRefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipLocaleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtraRefCode {
            get {
                return this.ExtraRefCodeField;
            }
            set {
                if ((this.ExtraRefCodeField.Equals(value) != true)) {
                    this.ExtraRefCodeField = value;
                    this.RaisePropertyChanged("ExtraRefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintField, value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocaleId {
            get {
                return this.LocaleIdField;
            }
            set {
                if ((this.LocaleIdField.Equals(value) != true)) {
                    this.LocaleIdField = value;
                    this.RaisePropertyChanged("LocaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SkipLocale {
            get {
                return this.SkipLocaleField;
            }
            set {
                if ((this.SkipLocaleField.Equals(value) != true)) {
                    this.SkipLocaleField = value;
                    this.RaisePropertyChanged("SkipLocale");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchResult", Namespace="http://schemas.datacontract.org/2004/07/BioMatcher")]
    [System.SerializableAttribute()]
    public partial class MatchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtraRefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extra {
            get {
                return this.ExtraField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraField, value) != true)) {
                    this.ExtraField = value;
                    this.RaisePropertyChanged("Extra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtraRefCode {
            get {
                return this.ExtraRefCodeField;
            }
            set {
                if ((this.ExtraRefCodeField.Equals(value) != true)) {
                    this.ExtraRefCodeField = value;
                    this.RaisePropertyChanged("ExtraRefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Found {
            get {
                return this.FoundField;
            }
            set {
                if ((this.FoundField.Equals(value) != true)) {
                    this.FoundField = value;
                    this.RaisePropertyChanged("Found");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BioMatcherWcfReference.IBioMatcherWcfService")]
    public interface IBioMatcherWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/Initialize", ReplyAction="http://tempuri.org/IBioMatcherWcfService/InitializeResponse")]
        void Initialize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/Initialize", ReplyAction="http://tempuri.org/IBioMatcherWcfService/InitializeResponse")]
        System.Threading.Tasks.Task InitializeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/Identify", ReplyAction="http://tempuri.org/IBioMatcherWcfService/IdentifyResponse")]
        BioMatcher.BioMatcherWcfReference.MatchResult Identify(BioMatcher.BioMatcherWcfReference.MatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/Identify", ReplyAction="http://tempuri.org/IBioMatcherWcfService/IdentifyResponse")]
        System.Threading.Tasks.Task<BioMatcher.BioMatcherWcfReference.MatchResult> IdentifyAsync(BioMatcher.BioMatcherWcfReference.MatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/UpdateCache", ReplyAction="http://tempuri.org/IBioMatcherWcfService/UpdateCacheResponse")]
        void UpdateCache(int localeId, bool fullUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/UpdateCache", ReplyAction="http://tempuri.org/IBioMatcherWcfService/UpdateCacheResponse")]
        System.Threading.Tasks.Task UpdateCacheAsync(int localeId, bool fullUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/GetCacheStatus", ReplyAction="http://tempuri.org/IBioMatcherWcfService/GetCacheStatusResponse")]
        string GetCacheStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBioMatcherWcfService/GetCacheStatus", ReplyAction="http://tempuri.org/IBioMatcherWcfService/GetCacheStatusResponse")]
        System.Threading.Tasks.Task<string> GetCacheStatusAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBioMatcherWcfServiceChannel : BioMatcher.BioMatcherWcfReference.IBioMatcherWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BioMatcherWcfServiceClient : System.ServiceModel.ClientBase<BioMatcher.BioMatcherWcfReference.IBioMatcherWcfService>, BioMatcher.BioMatcherWcfReference.IBioMatcherWcfService {
        
        public BioMatcherWcfServiceClient() {
        }
        
        public BioMatcherWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BioMatcherWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioMatcherWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BioMatcherWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Initialize() {
            base.Channel.Initialize();
        }
        
        public System.Threading.Tasks.Task InitializeAsync() {
            return base.Channel.InitializeAsync();
        }
        
        public BioMatcher.BioMatcherWcfReference.MatchResult Identify(BioMatcher.BioMatcherWcfReference.MatchRequest request) {
            return base.Channel.Identify(request);
        }
        
        public System.Threading.Tasks.Task<BioMatcher.BioMatcherWcfReference.MatchResult> IdentifyAsync(BioMatcher.BioMatcherWcfReference.MatchRequest request) {
            return base.Channel.IdentifyAsync(request);
        }
        
        public void UpdateCache(int localeId, bool fullUpdate) {
            base.Channel.UpdateCache(localeId, fullUpdate);
        }
        
        public System.Threading.Tasks.Task UpdateCacheAsync(int localeId, bool fullUpdate) {
            return base.Channel.UpdateCacheAsync(localeId, fullUpdate);
        }
        
        public string GetCacheStatus() {
            return base.Channel.GetCacheStatus();
        }
        
        public System.Threading.Tasks.Task<string> GetCacheStatusAsync() {
            return base.Channel.GetCacheStatusAsync();
        }
    }
}
